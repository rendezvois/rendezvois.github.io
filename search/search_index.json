{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Nacho Wiki # This wiki will cover various issues and concepts relating to the following topics. Video Audio Subtitles Demuxing & Muxing It will attempt to explain how to identify the issues and how to fix them. Click here to go to the solo page created so far.","title":"Home"},{"location":"#welcome-to-the-nacho-wiki","text":"This wiki will cover various issues and concepts relating to the following topics. Video Audio Subtitles Demuxing & Muxing It will attempt to explain how to identify the issues and how to fix them. Click here to go to the solo page created so far.","title":"Welcome to the Nacho Wiki"},{"location":"video/screenshots/anamorphic/","text":"Anamorphic Files: Storage Resolution vs Display Resolution Info This section is only relevant for files with anamorphic resolution. It is primarily found in rips from DVD, VHS and TV. Some lower quality Blu-ray content, especially Extras, are also anamorphically encoded. What are anamorphic files? # Anamorphic files are encoded (or stored) at a different resolution than what they are displayed in. The resolution at which such a file is stored is called the Storage Resolution , and the resolution at which it is displayed is called the Display Resolution . For example, a file may be encoded at 720x480 resolution, but at the time of playback, it's scaled to 853x480 by your media player or device. For our purposes, the screenshots need to be taken at the Display Resolution. Screenshots taken at Storage Resolution will appear to be Bad Aspect Ratio. They will look shrunk or stretched, and will not represent what the video actually looks like to someone watching the film. Example of screenshot taken at storage vs display resolution: How to tell if a file is anamorphic? # The easiest way is to look at the mediainfo summary on site. Whenever the Resolution field shows two values, one after the other, the file is anamorphic. The resolutions are in the form Storage RES ~> Display RES . The screenshots must be taken in the second resolution, i.e. Display Resolution. However, for many files, the screenshots will not match the Display Resolution exactly. There can be a discrepancy of 10 or 20 pixels between the screenshots and the Display Resolution shown in the summary. This is normal, and it happens because the Display aspect ratio in mediainfo is an approximation instead of being an exact value. For example, mediainfo may round an AR of 1.834:1 to 1.85:1. The second way is through the Advanced mode in mediainfo. There are two ways to take Advanced mediainfo of a file. CLI : mediainfo -f file.mkv > output.txt GUI : Load the file in the mediainfo application. First, go to View in menu bar and ensure that the Text view is selected. Then click on Debug and then Advanced mode . See this screenshot if you need help finding it. For illustration purposes, a sample file of resolution 718x436 was chosen. The relevant part we want from the Advanced mediainfo is: Pixel aspect ratio : 1.422 Display aspect ratio : 2.342 Display aspect ratio : 2.35:1 If the Pixel aspect ratio is NOT exactly 1.000, the file is anamorphic. How to find out the Display Resolution? # 1.1 Using PAR : # Files that are NOT anamorphic will have a Pixel aspect ratio ( PAR ) of exactly 1.000. You can use the PAR to find out what the Display Resolution should be. Just multiply the width of the file with the PAR value. So since the file's storage resolution is 718x436, the display width will be \\(718 \\times 1.422\\) which equals \\(1021\\) . Therefore, your screenshots will come out approximately 1021x436. 1.2 Using PAR (alternate method): # Some media players might display this file at an alternate display resolution, where instead of the width being multiplied, the height gets divided by the PAR . In the above example, the calculation becomes \\(436 \\div 1.422 = {\\sim}307\\) . Therefore, the alternate display resolution of this file will be 718x307. Once again, this gives a similar Display aspect ratio: \\(718 \\div 307 = 2.339\\) . You can think of this alternate resolution as the video being downscaled instead of upscaled when rescaling the video from the storage resolution to the display resolution. Another way of visualizing this is: To rescale such a file, you can either stretch it horizontally or shrink it vertically. Stretching it horizontally is the usual way, while shrinking it vertically is the alternate way. 1.3 Using DAR : # Instead of using PAR , take the precise Display aspect ratio from the Advanced mediainfo and multiply the height with it. This is in contrast to using the PAR , where we multiplied the width instead of the height. So, for the above example of a 718x436 file, the resulting width becomes \\(436 \\times 2.342 = 1021\\) , which is the same width we got using the PAR method. However, I do not prefer this method , simply because it is easier to spot an anamorphic file using the Pixel aspect ratio \u2014 if PAR is NOT 1.000, it is anamorphic. graph TD; A[\"<b>Encode at storage resolution</b> <br /> <i>Dimensions:</i> 718x436 <br /> <i>PAR:</i> 1.422 <br /> <i>DAR:</i> 2.342 <br /> <i>SAR:</i> 1.647\"]; A -->|\"Method 1.1 (Using PAR)\"| B[\"<b>Multiply the width with the PAR.</b> <br /> <u>Calculation:</u> 718 \u00d7 1.422 = 1021 <br /> <u>Result:</u> 1021x436 <br /> <u>AR:</u> 2.3417\"]; A -->|\"Method 1.2 (Using PAR - Alt.)\"| C[\"<b>Divide the height with the PAR.</b> <br /> <u>Calculation:</u> 436 \u00f7 1.422 = 307 <br /> <u>Result:</u> 718x307 <br /> <u>AR:</u> 2.3387\"]; A -->|\"Method 1.3 (Using DAR)\"| D[\"<b>Multiply the height with the DAR.</b> <br /> <u>Calculation:</u> 436 \u00d7 2.342 = 1021 <br /> <u>Result:</u> 1021x436 <br /> <u>AR:</u> 2.342\"]; Correlation between SAR , DAR and PAR : This part is not directly relevant to taking screenshots, but it is being mentioned for the curious. Pay attention to the correlation between the display resolution of 1021x436 we got above and the first Display aspect ratio ( DAR ) in the Advanced mediainfo above: \\(1021 \\div 436 = {\\sim}2.342\\) , which matches the first Display aspect ratio in the Advanced mediainfo. That first value is more precise, while the second one is a rounded value. The precise value is only shown in the Advanced mediainfo. A commonly known equation is DAR = SAR \u00d7 PAR . The acronyms DAR and PAR have already been referenced above. SAR refers to the Storage aspect ratio . Simply put, it is the ratio of the (storage) width to the (storage) height. For the sample file we chose above, its SAR is \\(718 \\div 436 = {\\sim}1.647\\) . Its PAR is already known to be 1.422. Therefore, its DAR = \\(1.647 \\times 1.422\\) which equals \\(2.342\\) , which in turn, matches the value in the Advanced mediainfo. 1.4 Using mkvinfo or the \"Info Tool\" in MKVToolnix: # MKVToolnix comes with both a CLI and a GUI tool to display information of an MKV file. The CLI tool is mkvinfo \u2014 it comes pre-installed on my seedboxes. The GUI version is available when you open MKVToolnix GUI \u2014 on the left sidebar, there is Info tool . Illustration of both ways: mkvinfo MKVToolnix GUI 's Info tool mkvinfo sample.mkv + EBML head | + EBML version: 1 | + EBML read version: 1 | + Maximum EBML ID length: 4 | + Maximum EBML size length: 8 | + Document type: matroska | + Document type version: 4 | + Document type read version: 2 + Segment: size 79072273 | + Seek head ( subentries will be skipped ) | + EBML void: size 4012 | + Segment information | + Timestamp scale: 1000000 | + Multiplexing application: libebml v1.4.2 + libmatroska v1.6.4 | + Writing application: mkvmerge v67.0.0 ( 'Under Stars' ) 64 -bit | + Duration: 00 :05:06.564000000 | + Date: 2022 -05-08 16 :41:33 UTC | + Segment UID: 0x17 0xae 0xf3 0x41 0x72 0xef 0x3e 0x02 0xa4 0xc9 0xd6 0xd2 0xef 0x44 0xf9 0xce | + Tracks | + Track | + Track number: 1 ( track ID for mkvmerge & mkvextract: 0 ) | + Track UID: 214864758 | + Track type: video | + \"Lacing\" flag: 0 | + Codec ID: V_MPEG4/ISO/AVC | + Codec ' s private data: size 53 ( H.264 profile: High @L4.0 ) | + Default duration: 00 :00:00.040000000 ( 25 .000 frames/fields per second for a video track ) | + Language ( IETF BCP 47 ) : en | + Video track | + Pixel width: 716 | + Pixel height: 548 | + Display width: 1018 | + Display height: 548 Further reading material: # https://en.wikipedia.org/wiki/Pixel_aspect_ratio http://www.doom9.org/index.html?/aspectratios.htm https://forum.doom9.org/showthread.php?t=176152 https://forum.doom9.org/showthread.php?t=111102 https://www.animemusicvideos.org/guides/avtech3/theory-videoaspectratios.html","title":"Anamorphic Files"},{"location":"video/screenshots/anamorphic/#what-are-anamorphic-files","text":"Anamorphic files are encoded (or stored) at a different resolution than what they are displayed in. The resolution at which such a file is stored is called the Storage Resolution , and the resolution at which it is displayed is called the Display Resolution . For example, a file may be encoded at 720x480 resolution, but at the time of playback, it's scaled to 853x480 by your media player or device. For our purposes, the screenshots need to be taken at the Display Resolution. Screenshots taken at Storage Resolution will appear to be Bad Aspect Ratio. They will look shrunk or stretched, and will not represent what the video actually looks like to someone watching the film. Example of screenshot taken at storage vs display resolution:","title":"What are anamorphic files?"},{"location":"video/screenshots/anamorphic/#how-to-tell-if-a-file-is-anamorphic","text":"The easiest way is to look at the mediainfo summary on site. Whenever the Resolution field shows two values, one after the other, the file is anamorphic. The resolutions are in the form Storage RES ~> Display RES . The screenshots must be taken in the second resolution, i.e. Display Resolution. However, for many files, the screenshots will not match the Display Resolution exactly. There can be a discrepancy of 10 or 20 pixels between the screenshots and the Display Resolution shown in the summary. This is normal, and it happens because the Display aspect ratio in mediainfo is an approximation instead of being an exact value. For example, mediainfo may round an AR of 1.834:1 to 1.85:1. The second way is through the Advanced mode in mediainfo. There are two ways to take Advanced mediainfo of a file. CLI : mediainfo -f file.mkv > output.txt GUI : Load the file in the mediainfo application. First, go to View in menu bar and ensure that the Text view is selected. Then click on Debug and then Advanced mode . See this screenshot if you need help finding it. For illustration purposes, a sample file of resolution 718x436 was chosen. The relevant part we want from the Advanced mediainfo is: Pixel aspect ratio : 1.422 Display aspect ratio : 2.342 Display aspect ratio : 2.35:1 If the Pixel aspect ratio is NOT exactly 1.000, the file is anamorphic.","title":"How to tell if a file is anamorphic?"},{"location":"video/screenshots/anamorphic/#how-to-find-out-the-display-resolution","text":"","title":"How to find out the Display Resolution?"},{"location":"video/screenshots/anamorphic/#11-using-par","text":"Files that are NOT anamorphic will have a Pixel aspect ratio ( PAR ) of exactly 1.000. You can use the PAR to find out what the Display Resolution should be. Just multiply the width of the file with the PAR value. So since the file's storage resolution is 718x436, the display width will be \\(718 \\times 1.422\\) which equals \\(1021\\) . Therefore, your screenshots will come out approximately 1021x436.","title":"1.1 Using PAR:"},{"location":"video/screenshots/anamorphic/#12-using-par-alternate-method","text":"Some media players might display this file at an alternate display resolution, where instead of the width being multiplied, the height gets divided by the PAR . In the above example, the calculation becomes \\(436 \\div 1.422 = {\\sim}307\\) . Therefore, the alternate display resolution of this file will be 718x307. Once again, this gives a similar Display aspect ratio: \\(718 \\div 307 = 2.339\\) . You can think of this alternate resolution as the video being downscaled instead of upscaled when rescaling the video from the storage resolution to the display resolution. Another way of visualizing this is: To rescale such a file, you can either stretch it horizontally or shrink it vertically. Stretching it horizontally is the usual way, while shrinking it vertically is the alternate way.","title":"1.2 Using PAR (alternate method):"},{"location":"video/screenshots/anamorphic/#13-using-dar","text":"Instead of using PAR , take the precise Display aspect ratio from the Advanced mediainfo and multiply the height with it. This is in contrast to using the PAR , where we multiplied the width instead of the height. So, for the above example of a 718x436 file, the resulting width becomes \\(436 \\times 2.342 = 1021\\) , which is the same width we got using the PAR method. However, I do not prefer this method , simply because it is easier to spot an anamorphic file using the Pixel aspect ratio \u2014 if PAR is NOT 1.000, it is anamorphic. graph TD; A[\"<b>Encode at storage resolution</b> <br /> <i>Dimensions:</i> 718x436 <br /> <i>PAR:</i> 1.422 <br /> <i>DAR:</i> 2.342 <br /> <i>SAR:</i> 1.647\"]; A -->|\"Method 1.1 (Using PAR)\"| B[\"<b>Multiply the width with the PAR.</b> <br /> <u>Calculation:</u> 718 \u00d7 1.422 = 1021 <br /> <u>Result:</u> 1021x436 <br /> <u>AR:</u> 2.3417\"]; A -->|\"Method 1.2 (Using PAR - Alt.)\"| C[\"<b>Divide the height with the PAR.</b> <br /> <u>Calculation:</u> 436 \u00f7 1.422 = 307 <br /> <u>Result:</u> 718x307 <br /> <u>AR:</u> 2.3387\"]; A -->|\"Method 1.3 (Using DAR)\"| D[\"<b>Multiply the height with the DAR.</b> <br /> <u>Calculation:</u> 436 \u00d7 2.342 = 1021 <br /> <u>Result:</u> 1021x436 <br /> <u>AR:</u> 2.342\"]; Correlation between SAR , DAR and PAR : This part is not directly relevant to taking screenshots, but it is being mentioned for the curious. Pay attention to the correlation between the display resolution of 1021x436 we got above and the first Display aspect ratio ( DAR ) in the Advanced mediainfo above: \\(1021 \\div 436 = {\\sim}2.342\\) , which matches the first Display aspect ratio in the Advanced mediainfo. That first value is more precise, while the second one is a rounded value. The precise value is only shown in the Advanced mediainfo. A commonly known equation is DAR = SAR \u00d7 PAR . The acronyms DAR and PAR have already been referenced above. SAR refers to the Storage aspect ratio . Simply put, it is the ratio of the (storage) width to the (storage) height. For the sample file we chose above, its SAR is \\(718 \\div 436 = {\\sim}1.647\\) . Its PAR is already known to be 1.422. Therefore, its DAR = \\(1.647 \\times 1.422\\) which equals \\(2.342\\) , which in turn, matches the value in the Advanced mediainfo.","title":"1.3 Using DAR:"},{"location":"video/screenshots/anamorphic/#14-using-mkvinfo-or-the-info-tool-in-mkvtoolnix","text":"MKVToolnix comes with both a CLI and a GUI tool to display information of an MKV file. The CLI tool is mkvinfo \u2014 it comes pre-installed on my seedboxes. The GUI version is available when you open MKVToolnix GUI \u2014 on the left sidebar, there is Info tool . Illustration of both ways: mkvinfo MKVToolnix GUI 's Info tool mkvinfo sample.mkv + EBML head | + EBML version: 1 | + EBML read version: 1 | + Maximum EBML ID length: 4 | + Maximum EBML size length: 8 | + Document type: matroska | + Document type version: 4 | + Document type read version: 2 + Segment: size 79072273 | + Seek head ( subentries will be skipped ) | + EBML void: size 4012 | + Segment information | + Timestamp scale: 1000000 | + Multiplexing application: libebml v1.4.2 + libmatroska v1.6.4 | + Writing application: mkvmerge v67.0.0 ( 'Under Stars' ) 64 -bit | + Duration: 00 :05:06.564000000 | + Date: 2022 -05-08 16 :41:33 UTC | + Segment UID: 0x17 0xae 0xf3 0x41 0x72 0xef 0x3e 0x02 0xa4 0xc9 0xd6 0xd2 0xef 0x44 0xf9 0xce | + Tracks | + Track | + Track number: 1 ( track ID for mkvmerge & mkvextract: 0 ) | + Track UID: 214864758 | + Track type: video | + \"Lacing\" flag: 0 | + Codec ID: V_MPEG4/ISO/AVC | + Codec ' s private data: size 53 ( H.264 profile: High @L4.0 ) | + Default duration: 00 :00:00.040000000 ( 25 .000 frames/fields per second for a video track ) | + Language ( IETF BCP 47 ) : en | + Video track | + Pixel width: 716 | + Pixel height: 548 | + Display width: 1018 | + Display height: 548","title":"1.4 Using mkvinfo or the \"Info Tool\" in MKVToolnix:"},{"location":"video/screenshots/anamorphic/#further-reading-material","text":"https://en.wikipedia.org/wiki/Pixel_aspect_ratio http://www.doom9.org/index.html?/aspectratios.htm https://forum.doom9.org/showthread.php?t=176152 https://forum.doom9.org/showthread.php?t=111102 https://www.animemusicvideos.org/guides/avtech3/theory-videoaspectratios.html","title":"Further reading material:"}]}